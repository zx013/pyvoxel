# 已有类添加属性
<TestPlugin01>:
    name: 'testplugin01'

# 继承生成类，不能和已有类冲突
<TestWidget1(TestPlugin01, TestPlugin02) -> tw1>:
    name: 'testwidget-tw1'
    info: 'info: data01'
    info: 'info: data02'

    TestPlugin01:
        TestPlugin02:
            TestPlugin02:
    TestPlugin01:
    #TestWidget:

# 使用类的别名
<TestWidget -> tw2>:
    name: {'g\'h"\""i{}{}'.format(self.c0.name, '''xc'''): tw3.name, c0.c0.name: [c0.p.c0.name + info + info1]}
    info(safe|dynamic): info1 + 'abc'
    info1(str): 'def'
    info2(list): [self, root, tw3]
    info3(selfchild|selfindex): c0.c0
    info4: name[c0.c0.name][0]
    # info5(unsafe|TestPlugin01): TestPlugin01
    info6: 'baseinfo6'
    info7(selfindex): info6
    TestWidget1(tw1) -> tw3:
        name: 'name02'
        TestWidget1(tw1):
            name: 'name03'

<TestWidget -> tw3>:
    name: 'name03'

<TestWidget2(TestWidget1(tw1), TestWidget(tw2)) -> tw4>:

<TestWidget05>:
    TestWidget1(tw1) -> tw1:
    TestWidget(tw2) -> tw4:
        # info3: c0.c0.c0
        info6: 'selfinfo6'
        # info7: info6
        TestPlugin02:
            TestPlugin01:
                TestPlugin02:
    TestWidget(tw3) -> tw2:
    # TestWidget:
