{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "pyvoxel-language",
	"patterns": [
		{"include": "#keywords"},
		{"include": "#strings"},
		{"include": "#comment"},
		{"include": "#defineclass"},
		{"include": "#findclass"},
		{"include": "#attribute"}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.pvlang",
				"match": "\\b(self|root|True|False)\\b"
			}]
		},
		"strings": {
			"patterns": [
				{
					"name": "string",
					"match": "\\'{2}"
				},
				{
					"name": "string",
					"match": "\\'.*?[^\\\\]\\'"
				},
				{
					"name": "string",
					"match": "\\\"{2}"
				},
				{
					"name": "string",
					"match": "\\\".*?[^\\\\]\\\""
				}
			]
		},
		"comment": {
			"name": "comment",
			"match": "#.*"
		},
		"defineclass": {
			"begin": "^<+[A-Z]\\w*",
			"end": "$|>[ ]*:[ ]*",
			"beginCaptures": {
				"0": { "name": "defineclass.base" }
			},
			"endCaptures": {
				"0": { "name": "defineclass.base" }
			},
			"patterns": [
				{
					"begin": "\\(",
					"end": "$|\\)",
					"name": 
					"defineclass.brackets",
					"patterns": [
						{
							"name": "defineclass.inherit",
							"match": "\\b[A-Z]+\\w+\\b"
						},
						{
							"name": "defineclass.inheritalias",
							"match": "\\(\\b[a-z0-9_]+\\b\\)"
						}
					]
				},
				{
					"name": "defineclass.arrow",
					"match": "->"
				},
				{
					"name": "defineclass.alias",
					"match": "\\b\\w+\\b"
				}
			]
		},
		"findclass": {
			"begin": "^(    )+[A-Z]\\w*",
			"end": "$|:",
			"beginCaptures": {
				"0": { "name": "findclass.base" }
			},
			"patterns": [
				{
					"name": "findclass.alias",
					"match": "\\b\\w+\\b"
				},
				{
					"name": "findclass.brackets",
					"match": "\\(|\\)"
				},
				{
					"name": "findclass.arrow",
					"match": "->"
				}
			]
		},
		"attribute": {
			"begin": "^(    )+[a-z0-9_]+",
			"end": "$",
			"beginCaptures": {
				"0": { "name": "attribute.variable" }
			},
			"endCaptures": {
				"0": { "name": "attribute.variable" }
			},
			"patterns": [
				{
					"name": "attribute.variable",
					"match": "^(    )+[a-z0-9_]+"
				},
				{
					"begin": "\\(",
					"end": "$|\\)",
					"beginCaptures": {
						"0": { "name": "attribute.brackets" }
					},
					"endCaptures": {
						"0": { "name": "attribute.brackets" }
					},
					"patterns": [
						{
							"name": "attribute.note.keywords",
							"match": "\\b(safe|unsafe|static|dynamic|dict|complex|property|enumerate|bytes|filter|reversed|super|range|object|frozenset|map|set|zip|type|str|memoryview|staticmethod|float|bool|classmethod|int|tuple|list|bytearray|slice)\\b"
						},
						{
							"name": "attribute.note.keywords",
							"match": "\\b[A-Z]\\w+\\b"
						}
					]
				},
				{
					"begin": ":",
					"end": "$",
					"beginCaptures": {
						"0": { "name": "attribute.brackets" }
					},
					"patterns": [
						{
							"include": "#keywords"
						},
						{
							"include": "#strings"
						},
						{
							"name": "attribute.expr.variable",
							"match": "(\\b\\w+\\b\\.)*\\b\\w+\\b"
						}
					]
				}
			]
		}
	},
	"scopeName": "source.pv"
}